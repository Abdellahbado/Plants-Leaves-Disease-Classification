{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":4191272,"sourceType":"datasetVersion","datasetId":2471641}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-06T22:48:19.705377Z","iopub.status.idle":"2024-07-06T22:48:19.705745Z","shell.execute_reply.started":"2024-07-06T22:48:19.705573Z","shell.execute_reply":"2024-07-06T22:48:19.705589Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import os\nimport shutil\n\ndef organize_dataset(input_path, output_path):\n    # Define the main directories\n    main_dirs = ['train', 'valid', 'test']\n    \n    for main_dir in main_dirs:\n        # Create new directories in the working directory\n        new_diseased_dir = os.path.join(output_path, main_dir, 'diseased')\n        new_healthy_dir = os.path.join(output_path, main_dir, 'healthy')\n        os.makedirs(new_diseased_dir, exist_ok=True)\n        os.makedirs(new_healthy_dir, exist_ok=True)\n        \n        # Path to the original directory\n        original_dir = os.path.join(input_path, 'Plants_2', main_dir)\n        \n        # Iterate through all subdirectories in the original directory\n        for plant_dir in os.listdir(original_dir):\n            plant_path = os.path.join(original_dir, plant_dir)\n            if os.path.isdir(plant_path):\n                # Determine if the plant is diseased or healthy\n                is_diseased = 'diseased' in plant_dir.lower()\n                \n                # Choose the appropriate new directory\n                new_dir = new_diseased_dir if is_diseased else new_healthy_dir\n                \n                # Copy all images from the plant directory to the new directory\n                for img in os.listdir(plant_path):\n                    if img.lower().endswith(('.jpg', '.jpeg', '.png', '.gif')):\n                        old_path = os.path.join(plant_path, img)\n                        new_path = os.path.join(new_dir, f\"{plant_dir}_{img}\")\n                        shutil.copy2(old_path, new_path)\n\n# Use the function\ninput_path = '/kaggle/input/plant-leaves-for-image-classification'\noutput_path = '/kaggle/working/organized_plant_dataset'\norganize_dataset(input_path, output_path)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:48:19.707106Z","iopub.status.idle":"2024-07-06T22:48:19.707535Z","shell.execute_reply.started":"2024-07-06T22:48:19.707316Z","shell.execute_reply":"2024-07-06T22:48:19.707334Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications import MobileNetV2, ResNet50V2\nfrom tensorflow.keras.layers import Dense, GlobalAveragePooling2D, Dropout, BatchNormalization\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping, ReduceLROnPlateau\nfrom tensorflow.keras.regularizers import l2\n","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:53:00.709688Z","iopub.execute_input":"2024-07-06T22:53:00.710255Z","iopub.status.idle":"2024-07-06T22:53:00.717839Z","shell.execute_reply.started":"2024-07-06T22:53:00.710214Z","shell.execute_reply":"2024-07-06T22:53:00.716690Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"# Set up paths\nbase_dir = '/kaggle/working/organized_plant_dataset'\ntrain_dir = f'{base_dir}/train'\nvalid_dir = f'{base_dir}/valid'\ntest_dir = f'{base_dir}/test'\n\n# Set up parameters\nIMG_SIZE = (224, 224)\nBATCH_SIZE = 32\nEPOCHS = 10\n","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:51:30.867633Z","iopub.execute_input":"2024-07-06T22:51:30.868229Z","iopub.status.idle":"2024-07-06T22:51:30.873807Z","shell.execute_reply.started":"2024-07-06T22:51:30.868198Z","shell.execute_reply":"2024-07-06T22:51:30.872707Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"# Data Augmentation\ntrain_datagen = ImageDataGenerator(\n    rescale=1./255,\n    rotation_range=20,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    fill_mode='nearest'\n)\n\nvalid_datagen = ImageDataGenerator(rescale=1./255)\n\n# Set up data generators\ntrain_generator = train_datagen.flow_from_directory(\n    train_dir,\n    target_size=IMG_SIZE,\n    batch_size=BATCH_SIZE,\n    class_mode='binary'\n)\n\nvalidation_generator = valid_datagen.flow_from_directory(\n    valid_dir,\n    target_size=IMG_SIZE,\n    batch_size=BATCH_SIZE,\n    class_mode='binary'\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T22:51:30.875035Z","iopub.execute_input":"2024-07-06T22:51:30.875348Z","iopub.status.idle":"2024-07-06T22:51:31.018992Z","shell.execute_reply.started":"2024-07-06T22:51:30.875321Z","shell.execute_reply":"2024-07-06T22:51:31.018225Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Found 4274 images belonging to 2 classes.\nFound 110 images belonging to 2 classes.\n","output_type":"stream"}]},{"cell_type":"code","source":"# Load the pre-trained model\nbase_model = ResNet50V2(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n\n# Add custom layers with regularization\nx = base_model.output\nx = GlobalAveragePooling2D()(x)\nx = Dense(512, activation='relu', kernel_regularizer=l2(0.01))(x)\nx = BatchNormalization()(x)\nx = Dropout(0.5)(x)\nx = Dense(256, activation='relu', kernel_regularizer=l2(0.01))(x)\nx = BatchNormalization()(x)\nx = Dropout(0.5)(x)\noutput = Dense(1, activation='sigmoid')(x)\n\nmodel = Model(inputs=base_model.input, outputs=output)\n\n# Unfreeze some of the top layers of the base model\nfor layer in base_model.layers[-10:]:\n    layer.trainable = True\n\n# Compile the model\nmodel.compile(optimizer=Adam(learning_rate=0.0001), loss='binary_crossentropy', metrics=['accuracy'])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-06T23:00:53.249822Z","iopub.execute_input":"2024-07-06T23:00:53.251015Z","iopub.status.idle":"2024-07-06T23:00:54.847182Z","shell.execute_reply.started":"2024-07-06T23:00:53.250960Z","shell.execute_reply":"2024-07-06T23:00:54.846221Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"checkpoint = ModelCheckpoint('best_model.keras', save_best_only=True, monitor='val_accuracy', mode='max')\nearly_stop = EarlyStopping(monitor='val_loss', patience=3, restore_best_weights=True)\nreduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.2, patience=3, min_lr=1e-6)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-06T23:00:54.848951Z","iopub.execute_input":"2024-07-06T23:00:54.849278Z","iopub.status.idle":"2024-07-06T23:00:54.854530Z","shell.execute_reply.started":"2024-07-06T23:00:54.849251Z","shell.execute_reply":"2024-07-06T23:00:54.853582Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"history = model.fit(\n    train_generator,\n    steps_per_epoch=train_generator.samples // BATCH_SIZE,\n    epochs=EPOCHS,\n    validation_data=validation_generator,\n    validation_steps=validation_generator.samples // BATCH_SIZE,\n    callbacks=[checkpoint, early_stop, reduce_lr]\n)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-06T23:00:54.855582Z","iopub.execute_input":"2024-07-06T23:00:54.855835Z","iopub.status.idle":"2024-07-06T23:47:14.573847Z","shell.execute_reply.started":"2024-07-06T23:00:54.855812Z","shell.execute_reply":"2024-07-06T23:47:14.572741Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m636s\u001b[0m 4s/step - accuracy: 0.7211 - loss: 11.7186 - val_accuracy: 0.7917 - val_loss: 10.3129 - learning_rate: 1.0000e-04\nEpoch 2/10\n\u001b[1m  1/133\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m17s\u001b[0m 135ms/step - accuracy: 0.9062 - loss: 10.0217","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/contextlib.py:153: UserWarning: Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches. You may need to use the `.repeat()` function when building your dataset.\n  self.gen.throw(typ, value, traceback)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 51ms/step - accuracy: 0.9062 - loss: 10.0217 - val_accuracy: 0.9286 - val_loss: 10.1036 - learning_rate: 1.0000e-04\nEpoch 3/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m530s\u001b[0m 4s/step - accuracy: 0.9235 - loss: 9.6640 - val_accuracy: 0.8854 - val_loss: 8.8182 - learning_rate: 1.0000e-04\nEpoch 4/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 8.4966 - val_accuracy: 1.0000 - val_loss: 8.5435 - learning_rate: 1.0000e-04\nEpoch 5/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m517s\u001b[0m 4s/step - accuracy: 0.9387 - loss: 8.3308 - val_accuracy: 0.9479 - val_loss: 7.5674 - learning_rate: 1.0000e-04\nEpoch 6/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 10ms/step - accuracy: 0.9375 - loss: 7.5962 - val_accuracy: 0.8571 - val_loss: 7.7638 - learning_rate: 1.0000e-04\nEpoch 7/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m530s\u001b[0m 4s/step - accuracy: 0.9539 - loss: 7.2570 - val_accuracy: 0.9479 - val_loss: 6.8030 - learning_rate: 1.0000e-04\nEpoch 8/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 13ms/step - accuracy: 0.9688 - loss: 6.6231 - val_accuracy: 0.9286 - val_loss: 6.5620 - learning_rate: 1.0000e-04\nEpoch 9/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m540s\u001b[0m 4s/step - accuracy: 0.9698 - loss: 6.3297 - val_accuracy: 0.9271 - val_loss: 5.9781 - learning_rate: 1.0000e-04\nEpoch 10/10\n\u001b[1m133/133\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 10ms/step - accuracy: 0.9688 - loss: 5.7813 - val_accuracy: 1.0000 - val_loss: 5.6775 - learning_rate: 1.0000e-04\n","output_type":"stream"}]},{"cell_type":"code","source":"# Evaluate the model\ntest_datagen = ImageDataGenerator(rescale=1./255)\ntest_generator = test_datagen.flow_from_directory(\n    test_dir,\n    target_size=IMG_SIZE,\n    batch_size=BATCH_SIZE,\n    class_mode='binary'\n)\n\ntest_loss, test_acc = model.evaluate(test_generator)\nprint(f'Test accuracy: {test_acc:.4f}')\n","metadata":{"execution":{"iopub.status.busy":"2024-07-06T23:48:26.776675Z","iopub.execute_input":"2024-07-06T23:48:26.777345Z","iopub.status.idle":"2024-07-06T23:48:49.925846Z","shell.execute_reply.started":"2024-07-06T23:48:26.777311Z","shell.execute_reply":"2024-07-06T23:48:49.924821Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"Found 110 images belonging to 2 classes.\n\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 3s/step - accuracy: 0.9485 - loss: 5.9303\nTest accuracy: 0.9364\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(12, 4))\nplt.subplot(1, 2, 1)\nplt.plot(history.history['accuracy'], label='Train Accuracy')\nplt.plot(history.history['val_accuracy'], label='Validation Accuracy')\nplt.legend()\nplt.title('Accuracy')\n\nplt.subplot(1, 2, 2)\nplt.plot(history.history['loss'], label='Train Loss')\nplt.plot(history.history['val_loss'], label='Validation Loss')\nplt.legend()\nplt.title('Loss')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T23:49:18.356854Z","iopub.execute_input":"2024-07-06T23:49:18.357277Z","iopub.status.idle":"2024-07-06T23:49:18.840219Z","shell.execute_reply.started":"2024-07-06T23:49:18.357241Z","shell.execute_reply":"2024-07-06T23:49:18.839242Z"},"trusted":true},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x400 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}